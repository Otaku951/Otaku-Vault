@model List<OtakuVault.Models.MediaItem>
@{
    ViewData["Title"] = "Media Library";
    string viewType = ViewBag.ViewType ?? "card";
    string currentSearch = ViewBag.Search ?? "";
    string selectedType = ViewBag.Type ?? "All";
}

<div class="container">
    <h2 class="mt-3">Media Library</h2>

    <form method="get" class="row g-2 mb-3">
        <div class="col-md-4">
            <input type="text" name="search" class="form-control" placeholder="Search by title..." value="@currentSearch" />
        </div>

        <div class="col-md-3">
            @Html.DropDownList(
                "type",
                ViewBag.TypeList as SelectList,
                new { @class = "form-select" }
            )
        </div>

        <div class="col-md-3">
            @Html.DropDownList(
                "view",
                ViewBag.ViewList as SelectList,
                new { @class = "form-select" }
            )
        </div>

        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Filter</button>
        </div>
    </form>

    <div class="mb-3">
        @foreach (char c in Enumerable.Range('A', 26).Select(x => (char)x))
        {
            <a href="#@c" class="me-2">@c</a>
        }
    </div>

    @if (Model == null || !Model.Any())
    {
        <p>No media found.</p>
    }
    else if (viewType == "card")
    {
        var grouped = ViewBag.GroupedMedia as Dictionary<char, List<MediaItem>>;
        if (grouped != null)
        {
            foreach (var group in grouped)
            {
                <h3 id="@group.Key" class="mt-4 border-bottom pb-1">@group.Key</h3>
                <div class="row mb-4">
                    @foreach (var item in group.Value)
                    {
                        <div class="col-md-3 mb-3">
                            <div class="card h-100">
                                <img src="@(item.ImageData != null ? $"data:image/png;base64,{Convert.ToBase64String(item.ImageData)}" : "/images/placeholder.png")"
                                     class="card-img-top"
                                     style="height: 200px; object-fit: cover;"
                                     onerror="this.onerror=null;this.src='/images/placeholder.png';" />
                                <div class="card-body">
                                    <h5 class="card-title">@item.Title</h5>
                                    <p class="card-text text-muted">@item.Type - @item.Genre</p>
                                    <a asp-controller="MediaLibrary" asp-action="MediaDetails" asp-route-id="@item.Id" class="btn btn-primary btn-sm">
                                        View
                                    </a>
                                    @if (!string.IsNullOrEmpty(item.ExternalLink))
                                    {
                                        <a href="@item.ExternalLink" target="_blank" class="btn btn-sm btn-outline-primary">More</a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        }
    }
    else if (viewType == "text")
    {
        var grouped = ViewBag.GroupedMedia as Dictionary<char, List<MediaItem>>;
        if (grouped != null)
        {
            foreach (var group in grouped)
            {
                <h3 id="@group.Key">@group.Key</h3>
                <ul class="list-unstyled mb-4">
                    @foreach (var item in group.Value.OrderBy(m => m.Title))
                    {
                        <li>
                            <strong>@item.Title</strong> - <span class="text-muted">@item.Type</span>
                            <a asp-controller="MediaLibrary" asp-action="MediaDetails" asp-route-id="@item.Id" class="btn btn-primary btn-sm">
                                View
                            </a>
                            @if (!string.IsNullOrEmpty(item.ExternalLink))
                            {
                                <a href="@item.ExternalLink" target="_blank" class="ms-2">View</a>
                            }
                        </li>
                    }
                </ul>
            }
        }
    }

</div>